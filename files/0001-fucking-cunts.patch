From f25a3d040c47757c282e0b4997a7fce7d65a22e7 Mon Sep 17 00:00:00 2001
From: Joey Riches <josephriches@gmail.com>
Date: Sat, 18 Jun 2022 16:59:28 +0100
Subject: [PATCH 1/1] fucking cunts

---
 CMakeLists.txt | 88 --------------------------------------------------
 1 file changed, 88 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 7e9305e5bc..b7d40bafcb 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -231,94 +231,6 @@ if("${OpenGL_GL_PREFERENCE}" STREQUAL "GLVND")
    message(STATUS "Adding linker flags for GLVND.")
 endif()
 
-if("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
-  wl_add_flag(WL_COMPILE_DIAGNOSTICS "-Weverything")
-
-  # Disabled warnings that are overly verbose right now or just do not make sense.
-  wl_add_flag(WL_COMPILE_DIAGNOSTICS "-Wno-c++98-compat")
-  wl_add_flag(WL_COMPILE_DIAGNOSTICS "-Wno-c++98-compat-pedantic")
-  wl_add_flag(WL_COMPILE_DIAGNOSTICS "-Wno-conversion")
-  wl_add_flag(WL_COMPILE_DIAGNOSTICS "-Wno-exit-time-destructors")
-  wl_add_flag(WL_COMPILE_DIAGNOSTICS "-Wno-global-constructors")
-  wl_add_flag(WL_COMPILE_DIAGNOSTICS "-Wno-padded")
-  wl_add_flag(WL_COMPILE_DIAGNOSTICS "-Wno-sign-conversion")
-  wl_add_flag(WL_COMPILE_DIAGNOSTICS "-Wno-missing-noreturn")
-
-  # It is impossible to write code that both GCC and Clang will like,
-  # so we have to switch off the warning for one of them.
-  # http://clang-developers.42468.n3.nabble.com/Question-on-Wswitch-enum-td4025927.html
-  wl_add_flag(WL_COMPILE_DIAGNOSTICS "-Wno-switch-enum")
-
-  # TODO(sirver): weak-vtables should be enabled, but leads to lot of errors right now.
-  wl_add_flag(WL_COMPILE_DIAGNOSTICS "-Wno-weak-vtables")
-
-  wl_add_flag(WL_COMPILE_DIAGNOSTICS "-Wno-unreachable-code")
-  wl_add_flag(WL_COMPILE_DIAGNOSTICS "-Wno-documentation")
-
-  wl_add_flag(WL_COMPILE_DIAGNOSTICS "-Werror=deprecated")
-  wl_add_flag(WL_COMPILE_DIAGNOSTICS "-Werror=non-pod-varargs")
-
-  wl_add_flag(WL_COMPILE_DIAGNOSTICS "-Qunused-arguments")
-
-  wl_add_flag(WL_COMPILE_DIAGNOSTICS "-Wint-to-void-pointer-cast")
-  if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER 3.8)
-      wl_add_flag(WL_COMPILE_DIAGNOSTICS "-Winconsistent-missing-override")
-  endif()
-elseif(MSVC)
-  # TODO compiler warning options
-  # wl_add_flag(WL_COMPILE_DIAGNOSTICS "/Wall")
-else()
-  # Assuming GCC 4.8 or higher.
-  if(WIN32)
-    # This is needed for getenv().
-    wl_add_flag(WL_GENERIC_CXX_FLAGS "-std=gnu++11")
-    if (OPTION_BUILD_WINSTATIC)
-      set(CMAKE_CXX_STANDARD_LIBRARIES "-static-libgcc -static-libstdc++ ${CMAKE_CXX_STANDARD_LIBRARIES}")
-      set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -Wl,-Bstatic")
-    endif()
-  else()
-    # SDL and MinGW both declare 'unsigned int __builtin_ia32_crc32qi(unsigned int, unsigned char)', resulting in lots of warnings. So, we can't have this flag in Windows.
-    wl_add_flag(WL_COMPILE_DIAGNOSTICS "-Wredundant-decls")
-  endif()
-
-  # Because of: https://svn.boost.org/trac/boost/ticket/9240.
-  wl_add_flag(WL_GENERIC_CXX_FLAGS "-fext-numeric-literals")
-
-  wl_add_flag(WL_COMPILE_DIAGNOSTICS "-Wall")
-  wl_add_flag(WL_COMPILE_DIAGNOSTICS "-Wpedantic")
-  wl_add_flag(WL_COMPILE_DIAGNOSTICS "-Wdeprecated-declarations")
-  wl_add_flag(WL_COMPILE_DIAGNOSTICS "-Wextra")
-  wl_add_flag(WL_COMPILE_DIAGNOSTICS "-Wformat")
-  wl_add_flag(WL_COMPILE_DIAGNOSTICS "-Wformat-nonliteral")
-  wl_add_flag(WL_COMPILE_DIAGNOSTICS "-Wformat-security")
-  wl_add_flag(WL_COMPILE_DIAGNOSTICS "-Wformat-y2k")
-  wl_add_flag(WL_COMPILE_DIAGNOSTICS "-Winit-self")
-  wl_add_flag(WL_COMPILE_DIAGNOSTICS "-Winvalid-pch")
-  wl_add_flag(WL_COMPILE_DIAGNOSTICS "-Wlogical-op")
-  wl_add_flag(WL_COMPILE_DIAGNOSTICS "-Wmissing-include-dirs")
-  wl_add_flag(WL_COMPILE_DIAGNOSTICS "-Wno-undef")
-  wl_add_flag(WL_COMPILE_DIAGNOSTICS "-Wold-style-cast")
-  wl_add_flag(WL_COMPILE_DIAGNOSTICS "-Woverlength-strings")
-  wl_add_flag(WL_COMPILE_DIAGNOSTICS "-Wpacked")
-  wl_add_flag(WL_COMPILE_DIAGNOSTICS "-Wpointer-arith")
-  wl_add_flag(WL_COMPILE_DIAGNOSTICS "-Wsign-promo")
-  wl_add_flag(WL_COMPILE_DIAGNOSTICS "-Wsync-nand")
-  wl_add_flag(WL_COMPILE_DIAGNOSTICS "-Wtrampolines")
-  wl_add_flag(WL_COMPILE_DIAGNOSTICS "-Wundef")
-  wl_add_flag(WL_COMPILE_DIAGNOSTICS "-Wunused")
-  wl_add_flag(WL_COMPILE_DIAGNOSTICS "-Wunused-macros")
-endif()
-
-if(NOT MSVC)
-  # Turn some warnings into errors.
-  wl_add_flag(WL_COMPILE_DIAGNOSTICS "-Werror=format-security")
-  wl_add_flag(WL_COMPILE_DIAGNOSTICS "-Werror=return-type")
-  wl_add_flag(WL_COMPILE_DIAGNOSTICS "-Werror=shadow")
-  wl_add_flag(WL_COMPILE_DIAGNOSTICS "-Werror=uninitialized")
-
-  wl_add_flag(WL_GENERIC_CXX_FLAGS "-std=c++11")
-endif()
-
 # Cross-compile-unit optimization slows linking significantly.
 # Therefore, impatient user may want to prevent that.
 if(USE_FLTO_IF_AVAILABLE STREQUAL "yes")
-- 
2.35.3

